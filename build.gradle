plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com" }
	maven { url "https://api.modrinth.com/maven" }
	maven { url "https://maven.ladysnake.org/releases" }
	maven {
		name = "FzzyMaven"
		url = "https://maven.fzzyhmstrs.me/"
	}

	// WAILA
	maven { url "https://maven.bai.lol" }
	//PB4
	maven { url "https://maven.nucleoid.xyz/" }
	mavenLocal()
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

loom {
	accessWidenerPath = file("src/main/resources/skillz.accesswidener")
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "me.fzzyhmstrs:fzzy_config:${project.fzzyConfigVersion}"

	modApi "com.terraformersmc:modmenu:${project.modmenu_version}"
	modApi "maven.modrinth:tabapi:${project.tabapi_version}"
	modApi "dev.sygii:ultralib:1.0.2"


	/*modApi ('maven.modrinth:libz:1.0.2+1.20.1') {
		exclude(group: "net.fabricmc.fabric-api")
	}*/

	modApi ("dev.emi:emi-fabric:1.1.19+1.20.1")
	modApi ('maven.modrinth:jade:11.12.3+fabric')

	modApi("dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.2.3")
	modApi("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.2.3")
	modApi ('maven.modrinth:trinkets:3.7.2') {
		exclude(group: "net.fabricmc.fabric-api")
	}

	//COMPAT

	modCompileOnly ("mcp.mobius.waila:wthit-api:fabric-${project.wthit_version}"){
		exclude(group: "net.fabricmc.fabric-api")
	}

	modCompileOnly ('maven.modrinth:treechop:tIdTnzkf') {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modCompileOnly ("maven.modrinth:inmis:2.7.2+1.20.1") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modCompileOnly ("eu.pb4:placeholder-api:2.1.4+1.20.1")
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-fabric:12.1.785"
	
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}